# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-23 06:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../Doc/library/traceback.rst:2
msgid ":mod:`traceback` --- Print or retrieve a stack traceback"
msgstr ":mod:`traceback` --- 스택 트레이스백 인쇄와 조회"

#: ../Doc/library/traceback.rst:7
msgid "**Source code:** :source:`Lib/traceback.py`"
msgstr "**소스 코드:** :source:`Lib/traceback.py`"

#: ../Doc/library/traceback.rst:11
msgid ""
"This module provides a standard interface to extract, format and print "
"stack traces of Python programs.  It exactly mimics the behavior of the "
"Python interpreter when it prints a stack trace.  This is useful when you"
" want to print stack traces under program control, such as in a "
"\"wrapper\" around the interpreter."
msgstr ""
"이 모듈은 파이썬 프로그램의 스택 트레이스를 추출, 포맷 및 인쇄하는 표준 인터페이스를 제공합니다. 스택 트레이스를 인쇄할 때 "
"파이썬 인터프리터의 동작을 정확하게 모방합니다. 이것은 가령 인터프리터를 둘러싸는 \"래퍼\"처럼 프로그램 제어 하에서 스택 "
"트레이스를 인쇄하려고 할 때 유용합니다."

#: ../Doc/library/traceback.rst:19
msgid ""
"The module uses traceback objects --- this is the object type that is "
"stored in the :data:`sys.last_traceback` variable and returned as the "
"third item from :func:`sys.exc_info`."
msgstr ""
"이 모듈은 트레이스백 객체를 사용합니다 --- 이는 :data:`sys.last_traceback` 변수에 저장되고 "
":func:`sys.exc_info`\\의 세 번째 항목으로 반환되는 객체 형입니다."

#: ../Doc/library/traceback.rst:23
msgid "The module defines the following functions:"
msgstr "이 모듈은 다음 함수를 정의합니다:"

#: ../Doc/library/traceback.rst:28
msgid ""
"Print up to *limit* stack trace entries from traceback object *tb* "
"(starting from the caller's frame) if *limit* is positive.  Otherwise, "
"print the last ``abs(limit)`` entries.  If *limit* is omitted or "
"``None``, all entries are printed.  If *file* is omitted or ``None``, the"
" output goes to ``sys.stderr``; otherwise it should be an open file or "
"file-like object to receive the output."
msgstr ""
"*limit*\\가 양수면 (호출자 프레임에서 시작하여) 트레이스백 객체 *tb*\\의 최대 *limit* 개의 스택 트레이스 "
"항목을 인쇄합니다. 그렇지 않으면, 마지막 ``abs(limit)`` 항목을 인쇄합니다. *limit*\\가 생략되거나 "
"``None``\\이면, 모든 항목이 인쇄됩니다. *file*\\이 생략되거나 ``None``\\이면, 출력은 "
"``sys.stderr``\\로 갑니다; 그렇지 않으면 출력을 받을 열린 파일이나 파일류 객체여야 합니다."

#: ../Doc/library/traceback.rst:35 ../Doc/library/traceback.rst:85
msgid "Added negative *limit* support."
msgstr "음수 *limit* 지원을 추가했습니다."

#: ../Doc/library/traceback.rst:41
msgid ""
"Print exception information and stack trace entries from traceback object"
" *tb* to *file*. This differs from :func:`print_tb` in the following "
"ways:"
msgstr ""
"예외 정보와 트레이스백 객체 *tb*\\의 스택 트레이스 항목을 *file*\\로 인쇄합니다. 이것은 다음과 같은 점에서 "
":func:`print_tb`\\와 다릅니다:"

#: ../Doc/library/traceback.rst:45
msgid ""
"if *tb* is not ``None``, it prints a header ``Traceback (most recent call"
" last):``"
msgstr ""
"*tb*\\가 ``None``\\이 아니면, 헤더 ``Traceback (most recent call last):``\\를 "
"인쇄합니다."

#: ../Doc/library/traceback.rst:47
msgid "it prints the exception *etype* and *value* after the stack trace"
msgstr "스택 트레이스 다음에 예외 *etype*\\과 *value*\\를 인쇄합니다."

#: ../Doc/library/traceback.rst:48
msgid ""
"if *type(value)* is :exc:`SyntaxError` and *value* has the appropriate "
"format, it prints the line where the syntax error occurred with a caret "
"indicating the approximate position of the error."
msgstr ""
"*type(value)*\\가 :exc:`SyntaxError`\\고 *value*\\가 적절한 형식을 가지면, 에러의 대략적인 "
"위치를 나타내는 캐럿(caret)과 함께 문법 에러가 발생한 줄을 인쇄합니다."

#: ../Doc/library/traceback.rst:52
msgid ""
"The optional *limit* argument has the same meaning as for "
":func:`print_tb`. If *chain* is true (the default), then chained "
"exceptions (the :attr:`__cause__` or :attr:`__context__` attributes of "
"the exception) will be printed as well, like the interpreter itself does "
"when printing an unhandled exception."
msgstr ""
"선택적 *limit* 인자는 :func:`print_tb`\\와 같은 의미입니다. *chain*\\이 참(기본값)이면, 처리되지 "
"않은 예외를 인쇄할 때 인터프리터 자체가 하는 것과 마찬가지로, 연결된 예외(예외의 :attr:`__cause__`\\나 "
":attr:`__context__` 어트리뷰트)도 인쇄됩니다."

#: ../Doc/library/traceback.rst:58 ../Doc/library/traceback.rst:139
msgid "The *etype* argument is ignored and inferred from the type of *value*."
msgstr "*etype* 인자는 무시되고 *value* 형에서 유추됩니다."

#: ../Doc/library/traceback.rst:64
msgid ""
"This is a shorthand for ``print_exception(*sys.exc_info(), limit, file, "
"chain)``."
msgstr "이것은 ``print_exception(*sys.exc_info(), limit, file, chain)``\\의 줄임 표현입니다."

#: ../Doc/library/traceback.rst:70
msgid ""
"This is a shorthand for ``print_exception(sys.last_type, sys.last_value, "
"sys.last_traceback, limit, file, chain)``.  In general it will work only "
"after an exception has reached an interactive prompt (see "
":data:`sys.last_type`)."
msgstr ""
"이것은 ``print_exception(sys.last_type, sys.last_value, sys.last_traceback, "
"limit, file, chain)``\\의 줄임 표현입니다. 일반적으로 예외가 대화식 프롬프트에 도달한 후에만 작동합니다 "
"(:data:`sys.last_type`\\을 참조하십시오)."

#: ../Doc/library/traceback.rst:78
msgid ""
"Print up to *limit* stack trace entries (starting from the invocation "
"point) if *limit* is positive.  Otherwise, print the last ``abs(limit)`` "
"entries.  If *limit* is omitted or ``None``, all entries are printed. The"
" optional *f* argument can be used to specify an alternate stack frame to"
" start.  The optional *file* argument has the same meaning as for "
":func:`print_tb`."
msgstr ""
"*limit*\\가 양수면 (호출 지점에서 시작하여) 최대 *limit* 개의 스택 트레이스 항목을 인쇄합니다. 그렇지 않으면, "
"마지막 ``abs(limit)`` 항목을 인쇄합니다. *limit*\\가 생략되거나 ``None``\\이면, 모든 항목이 "
"인쇄됩니다. 선택적 *f* 인자를 사용하여 시작할 대체 스택 프레임을 지정할 수 있습니다. 선택적 *file* 인자는 "
":func:`print_tb`\\와 같은 의미입니다."

#: ../Doc/library/traceback.rst:91
msgid ""
"Return a :class:`StackSummary` object representing a list of \"pre-"
"processed\" stack trace entries extracted from the traceback object *tb*."
"  It is useful for alternate formatting of stack traces.  The optional "
"*limit* argument has the same meaning as for :func:`print_tb`.  A \"pre-"
"processed\" stack trace entry is a :class:`FrameSummary` object "
"containing attributes :attr:`~FrameSummary.filename`, "
":attr:`~FrameSummary.lineno`, :attr:`~FrameSummary.name`, and "
":attr:`~FrameSummary.line` representing the information that is usually "
"printed for a stack trace.  The :attr:`~FrameSummary.line` is a string "
"with leading and trailing whitespace stripped; if the source is not "
"available it is ``None``."
msgstr ""
"트레이스백 객체 *tb*\\에서 추출된 \"전 처리된\" 스택 트레이스 항목의 리스트를 나타내는 "
":class:`StackSummary` 객체를 반환합니다. 스택 트레이스의 대체 포매팅으로 유용합니다. 선택적 *limit* 인자는"
" :func:`print_tb`\\와 같은 의미입니다. \"전 처리된\" 스택 트레이스 항목은 일반적으로 스택 트레이스를 위해 "
"인쇄되는 정보를 나타내는 어트리뷰트 :attr:`~FrameSummary.filename`, "
":attr:`~FrameSummary.lineno`, :attr:`~FrameSummary.name` 및 "
":attr:`~FrameSummary.line`\\을 포함하는 :class:`FrameSummary` 객체입니다. "
":attr:`~FrameSummary.line`\\은 선행과 후행 공백이 제거된 문자열입니다; 소스를 사용할 수 없으면 "
"``None``\\입니다."

#: ../Doc/library/traceback.rst:105
msgid ""
"Extract the raw traceback from the current stack frame.  The return value"
" has the same format as for :func:`extract_tb`.  The optional *f* and "
"*limit* arguments have the same meaning as for :func:`print_stack`."
msgstr ""
"현재 스택 프레임에서 날 트레이스백을 추출합니다. 반환 값은 :func:`extract_tb`\\와 같은 형식입니다. 선택적 "
"*f*\\와 *limit* 인자는 :func:`print_stack`\\과 같은 의미입니다."

#: ../Doc/library/traceback.rst:112
msgid ""
"Given a list of tuples or :class:`FrameSummary` objects as returned by "
":func:`extract_tb` or :func:`extract_stack`, return a list of strings "
"ready for printing.  Each string in the resulting list corresponds to the"
" item with the same index in the argument list.  Each string ends in a "
"newline; the strings may contain internal newlines as well, for those "
"items whose source text line is not ``None``."
msgstr ""
":func:`extract_tb`\\나 :func:`extract_stack`\\이 반환한 튜플이나 "
":class:`FrameSummary` 객체의 리스트가 제공되면, 인쇄할 준비가 된 문자열의 리스트를 반환합니다. 결과 리스트의 각"
" 문자열은 인자 리스트에서 같은 인덱스를 가진 항목에 해당합니다. 각 문자열은 줄 바꿈으로 끝납니다; 소스 텍스트 줄이 "
"``None``\\이 아닌 항목의 경우, 문자열에 내부 줄 바꿈도 포함될 수 있습니다."

#: ../Doc/library/traceback.rst:122
msgid ""
"Format the exception part of a traceback.  The arguments are the "
"exception type and value such as given by ``sys.last_type`` and "
"``sys.last_value``. The return value is a list of strings, each ending in"
" a newline.  Normally, the list contains a single string; however, for "
":exc:`SyntaxError` exceptions, it contains several lines that (when "
"printed) display detailed information about where the syntax error "
"occurred.  The message indicating which exception occurred is the always "
"last string in the list."
msgstr ""
"트레이스백의 예외 부분을 포맷합니다. 인자는 ``sys.last_type``\\과 ``sys.last_value``\\에서 제공하는"
" 것과 같은 예외 형과 값입니다. 반환 값은 각각 줄 바꿈으로 끝나는 문자열의 리스트입니다. 일반적으로, 리스트는 단일 문자열을 "
"포함합니다; 그러나, :exc:`SyntaxError` 예외의 경우, 문법 에러가 발생한 위치에 대한 자세한 정보를 (인쇄될 때) "
"표시하는 여러 줄을 포함합니다. 어떤 예외가 발생했는지를 나타내는 메시지는 리스트에서 항상 마지막 문자열입니다."

#: ../Doc/library/traceback.rst:133
msgid ""
"Format a stack trace and the exception information.  The arguments  have "
"the same meaning as the corresponding arguments to "
":func:`print_exception`.  The return value is a list of strings, each "
"ending in a newline and some containing internal newlines.  When these "
"lines are concatenated and printed, exactly the same text is printed as "
"does :func:`print_exception`."
msgstr ""
"스택 트레이스와 예외 정보를 포맷합니다. 인자는 :func:`print_exception`\\의 해당하는 인자와 같은 의미입니다. "
"반환 값은 각각 줄 바꿈으로 끝나고 일부는 내부 줄 바꿈을 포함하는 문자열의 리스트입니다. 이 줄들을 이어붙여서 인쇄하면, "
":func:`print_exception`\\과 정확히 같은 텍스트가 인쇄됩니다."

#: ../Doc/library/traceback.rst:145
msgid ""
"This is like ``print_exc(limit)`` but returns a string instead of "
"printing to a file."
msgstr "이것은 ``print_exc(limit)``\\와 비슷하지만, 파일로 인쇄하는 대신 문자열을 반환합니다."

#: ../Doc/library/traceback.rst:151
msgid "A shorthand for ``format_list(extract_tb(tb, limit))``."
msgstr "``format_list(extract_tb(tb, limit))``\\의 줄임 표현입니다."

#: ../Doc/library/traceback.rst:156
msgid "A shorthand for ``format_list(extract_stack(f, limit))``."
msgstr "``format_list(extract_stack(f, limit))``\\의 줄임 표현입니다."

#: ../Doc/library/traceback.rst:160
msgid ""
"Clears the local variables of all the stack frames in a traceback *tb* by"
" calling the :meth:`clear` method of each frame object."
msgstr "각 프레임 객체의 :meth:`clear` 메서드를 호출하여 트레이스백 *tb*\\에 있는 모든 스택 프레임의 지역 변수를 지웁니다."

#: ../Doc/library/traceback.rst:167
msgid ""
"Walk a stack following ``f.f_back`` from the given frame, yielding the "
"frame and line number for each frame. If *f* is ``None``, the current "
"stack is used. This helper is used with :meth:`StackSummary.extract`."
msgstr ""
"주어진 프레임에서 ``f.f_back``\\을 따라 스택을 걸어가며 각 프레임의 프레임과 줄 번호를 산출(yield)합니다. "
"*f*\\가 ``None``\\이면, 현재 스택이 사용됩니다. 이 도우미는 :meth:`StackSummary.extract`\\와"
" 함께 사용됩니다."

#: ../Doc/library/traceback.rst:175
msgid ""
"Walk a traceback following ``tb_next`` yielding the frame and line number"
" for each frame. This helper is used with :meth:`StackSummary.extract`."
msgstr ""
"``tb_next``\\를 따라 트레이스백을 걸으면서 각 프레임의 프레임과 줄 번호를 산출(yield)합니다. 이 도우미는 "
":meth:`StackSummary.extract`\\와 함께 사용됩니다."

#: ../Doc/library/traceback.rst:180
msgid "The module also defines the following classes:"
msgstr "이 모듈은 또한 다음과 같은 클래스를 정의합니다:"

#: ../Doc/library/traceback.rst:183
msgid ":class:`TracebackException` Objects"
msgstr ":class:`TracebackException` 객체"

#: ../Doc/library/traceback.rst:187
msgid ""
":class:`TracebackException` objects are created from actual exceptions to"
" capture data for later printing in a lightweight fashion."
msgstr ""
":class:`TracebackException` 객체는 실제 예외에서 만들어져 나중에 인쇄하기 위한 데이터를 경량 방식으로 "
"포착합니다."

#: ../Doc/library/traceback.rst:192 ../Doc/library/traceback.rst:239
msgid ""
"Capture an exception for later rendering. *limit*, *lookup_lines* and "
"*capture_locals* are as for the :class:`StackSummary` class."
msgstr ""
"나중에 렌더링하기 위해 예외를 포착합니다. *limit*, *lookup_lines* 및 *capture_locals*\\는 "
":class:`StackSummary` 클래스와 같습니다."

#: ../Doc/library/traceback.rst:195 ../Doc/library/traceback.rst:242
msgid "Note that when locals are captured, they are also shown in the traceback."
msgstr "locals가 포착되면, 트레이스백에도 표시됨에 유의하십시오."

#: ../Doc/library/traceback.rst:199
msgid "A :class:`TracebackException` of the original ``__cause__``."
msgstr "원래 ``__cause__``\\의 :class:`TracebackException`."

#: ../Doc/library/traceback.rst:203
msgid "A :class:`TracebackException` of the original ``__context__``."
msgstr "원래 ``__context__``\\의 :class:`TracebackException`."

#: ../Doc/library/traceback.rst:207
msgid "The ``__suppress_context__`` value from the original exception."
msgstr "원래 예외의 ``__suppress_context__`` 값."

#: ../Doc/library/traceback.rst:211
msgid "A :class:`StackSummary` representing the traceback."
msgstr "트레이스백을 나타내는 :class:`StackSummary`."

#: ../Doc/library/traceback.rst:215
msgid "The class of the original traceback."
msgstr "원래 트레이스백의 클래스."

#: ../Doc/library/traceback.rst:219
msgid "For syntax errors - the file name where the error occurred."
msgstr "문법 에러일 때 - 에러가 발생한 파일 이름."

#: ../Doc/library/traceback.rst:223
msgid "For syntax errors - the line number where the error occurred."
msgstr "문법 에러일 때 - 에러가 발생한 줄 번호."

#: ../Doc/library/traceback.rst:227
msgid "For syntax errors - the text where the error occurred."
msgstr "문법 에러일 때 - 에러가 발생한 텍스트."

#: ../Doc/library/traceback.rst:231
msgid "For syntax errors - the offset into the text where the error occurred."
msgstr "문법 에러일 때 - 에러가 발생한 텍스트에서의 오프셋."

#: ../Doc/library/traceback.rst:235
msgid "For syntax errors - the compiler error message."
msgstr "문법 에러일 때 - 컴파일러 에러 메시지."

#: ../Doc/library/traceback.rst:246
msgid "Format the exception."
msgstr "예외를 포맷합니다."

#: ../Doc/library/traceback.rst:248
msgid ""
"If *chain* is not ``True``, ``__cause__`` and ``__context__`` will not be"
" formatted."
msgstr "*chain*\\이 ``True``\\가 아니면, ``__cause__``\\와 ``__context__``\\는 포맷되지 않습니다."

#: ../Doc/library/traceback.rst:251
msgid ""
"The return value is a generator of strings, each ending in a newline and "
"some containing internal newlines. :func:`~traceback.print_exception` is "
"a wrapper around this method which just prints the lines to a file."
msgstr ""
"반환 값은 각각 줄 바꿈으로 끝나고 일부는 내부 줄 바꿈을 포함하는 문자열의 제너레이터입니다. "
":func:`~traceback.print_exception`\\은 단지 파일에 줄을 인쇄하는 이 메서드를 둘러싸는 래퍼입니다."

#: ../Doc/library/traceback.rst:255 ../Doc/library/traceback.rst:269
msgid ""
"The message indicating which exception occurred is always the last string"
" in the output."
msgstr "어떤 예외가 발생했는지를 나타내는 메시지는 항상 출력의 마지막 문자열입니다."

#: ../Doc/library/traceback.rst:260
msgid "Format the exception part of the traceback."
msgstr "트레이스백의 예외 부분을 포맷합니다."

#: ../Doc/library/traceback.rst:262
msgid "The return value is a generator of strings, each ending in a newline."
msgstr "반환 값은 각각 줄 바꿈으로 끝나는 문자열의 제너레이터입니다."

#: ../Doc/library/traceback.rst:264
msgid ""
"Normally, the generator emits a single string; however, for "
":exc:`SyntaxError` exceptions, it emits several lines that (when printed)"
" display detailed information about where the syntax error occurred."
msgstr ""
"일반적으로, 제너레이터는 단일 문자열을 방출합니다; 그러나 :exc:`SyntaxError` 예외의 경우, 문법 에러가 발생한 "
"위치에 대한 자세한 정보를 (인쇄할 때) 표시하는 여러 줄을 방출합니다."

#: ../Doc/library/traceback.rst:274
msgid ":class:`StackSummary` Objects"
msgstr ":class:`StackSummary` 객체"

#: ../Doc/library/traceback.rst:278
msgid ":class:`StackSummary` objects represent a call stack ready for formatting."
msgstr ":class:`StackSummary` 객체는 포맷 준비가 된 호출 스택을 나타냅니다."

#: ../Doc/library/traceback.rst:284
msgid ""
"Construct a :class:`StackSummary` object from a frame generator (such as "
"is returned by :func:`~traceback.walk_stack` or "
":func:`~traceback.walk_tb`)."
msgstr ""
"(:func:`~traceback.walk_stack`\\이나 :func:`~traceback.walk_tb`\\에서 반환된 것과 "
"같은) 프레임 제너레이터로 :class:`StackSummary` 객체를 생성합니다."

#: ../Doc/library/traceback.rst:288
msgid ""
"If *limit* is supplied, only this many frames are taken from *frame_gen*."
" If *lookup_lines* is ``False``, the returned :class:`FrameSummary` "
"objects will not have read their lines in yet, making the cost of "
"creating the :class:`StackSummary` cheaper (which may be valuable if it "
"may not actually get formatted). If *capture_locals* is ``True`` the "
"local variables in each :class:`FrameSummary` are captured as object "
"representations."
msgstr ""
"*limit*\\가 제공되면, *frame_gen*\\에서 이 수 만큼의 프레임만 취합니다. *lookup_lines*\\가 "
"``False``\\이면, 반환된 :class:`FrameSummary` 객체는 아직 해당 줄을 읽지 않아서 "
":class:`StackSummary`\\를 만드는 비용을 줄입니다 (실제로 포맷되지 않을 수 있다면 유용 할 수 있습니다). "
"*capture_locals*\\가 ``True``\\이면, 각 :class:`FrameSummary`\\의 지역 변수는 객체 "
"표현(representation)으로 포착됩니다."

#: ../Doc/library/traceback.rst:298
msgid ""
"Construct a :class:`StackSummary` object from a supplied list of "
":class:`FrameSummary` objects or old-style list of tuples.  Each tuple "
"should be a 4-tuple with filename, lineno, name, line as the elements."
msgstr ""
"제공된 :class:`FrameSummary` 객체의 리스트나 이전 스타일의 튜플 리스트로 :class:`StackSummary` "
"객체를 생성합니다. 각 튜플은 파일명(filename), 줄 번호(lineno), 이름(name), 줄(line)을 요소로 하는 "
"4-튜플이어야 합니다."

#: ../Doc/library/traceback.rst:304
msgid ""
"Returns a list of strings ready for printing.  Each string in the "
"resulting list corresponds to a single frame from the stack. Each string "
"ends in a newline; the strings may contain internal newlines as well, for"
" those items with source text lines."
msgstr ""
"인쇄 준비가 된 문자열의 리스트를 반환합니다. 결과 리스트의 각 문자열은 스택의 단일 프레임에 해당합니다. 각 문자열은 줄 바꿈으로"
" 끝납니다; 소스 텍스트 줄이 있는 항목의 경우, 문자열에 내부 줄 바꿈도 포함될 수 있습니다."

#: ../Doc/library/traceback.rst:309
msgid ""
"For long sequences of the same frame and line, the first few repetitions "
"are shown, followed by a summary line stating the exact number of further"
" repetitions."
msgstr "같은 프레임과 줄의 긴 시퀀스의 경우, 처음 몇 번의 반복이 표시된 다음, 정확한 추가의 반복 횟수를 나타내는 요약 줄이 표시됩니다."

#: ../Doc/library/traceback.rst:313
msgid "Long sequences of repeated frames are now abbreviated."
msgstr "반복되는 프레임의 긴 시퀀스가 이제 축약됩니다."

#: ../Doc/library/traceback.rst:318
msgid ":class:`FrameSummary` Objects"
msgstr ":class:`FrameSummary` 객체"

#: ../Doc/library/traceback.rst:322
msgid ":class:`FrameSummary` objects represent a single frame in a traceback."
msgstr ":class:`FrameSummary` 객체는 트레이스백에서 단일 프레임을 나타냅니다."

#: ../Doc/library/traceback.rst:326
msgid ""
"Represent a single frame in the traceback or stack that is being "
"formatted or printed. It may optionally have a stringified version of the"
" frames locals included in it. If *lookup_line* is ``False``, the source "
"code is not looked up until the :class:`FrameSummary` has the "
":attr:`~FrameSummary.line` attribute accessed (which also happens when "
"casting it to a tuple). :attr:`~FrameSummary.line` may be directly "
"provided, and will prevent line lookups happening at all. *locals* is an "
"optional local variable dictionary, and if supplied the variable "
"representations are stored in the summary for later display."
msgstr ""
"포맷되거나 인쇄 중인 트레이스백이나 스택의 단일 프레임을 나타냅니다. 선택적으로 문자열로 변환된 버전의 프레임 지역 변수를 포함할 "
"수 있습니다. *lookup_line*\\이 ``False``\\이면, :class:`FrameSummary`\\의 "
":attr:`~FrameSummary.line` 어트리뷰트에 액세스할 때까지 (튜플로 캐스트 할 때도 발생합니다) 소스 코드를 찾지"
" 않습니다. :attr:`~FrameSummary.line`\\은 직접 제공될 수 있으며, 줄 조회가 전혀 발생하지 않도록 합니다."
" *locals*\\는 선택적 지역 변수 딕셔너리이며, 제공되면 변수 표현(representation)은 나중에 표시할 수 있도록 "
"요약에 저장됩니다."

#: ../Doc/library/traceback.rst:339
msgid "Traceback Examples"
msgstr "트레이스백 예제"

#: ../Doc/library/traceback.rst:341
msgid ""
"This simple example implements a basic read-eval-print loop, similar to "
"(but less useful than) the standard Python interactive interpreter loop."
"  For a more complete implementation of the interpreter loop, refer to "
"the :mod:`code` module. ::"
msgstr ""
"이 간단한 예제는 표준 파이썬 대화식 인터프리터 루프와 비슷하지만 (하지만 덜 유용한) 기본적인 읽기-평가-인쇄 루프를 구현합니다."
" 인터프리터 루프의 더욱 완전한 구현은 :mod:`code` 모듈을 참조하십시오. ::"

#: ../Doc/library/traceback.rst:363
msgid ""
"The following example demonstrates the different ways to print and format"
" the exception and traceback:"
msgstr "다음 예제는 예외와 추적을 인쇄하고 포맷하는 다양한 방법을 보여줍니다:"

#: ../Doc/library/traceback.rst:402
msgid "The output for the example would look similar to this:"
msgstr "예제의 출력은 다음과 유사합니다:"

#: ../Doc/library/traceback.rst:444
msgid ""
"The following example shows the different ways to print and format the "
"stack::"
msgstr "다음 예제는 스택을 인쇄하고 포맷하는 다양한 방법을 보여줍니다::"

#: ../Doc/library/traceback.rst:470
msgid "This last example demonstrates the final few formatting functions:"
msgstr "이 마지막 예제는 마지막 몇 가지 포매팅 함수를 예시합니다:"

